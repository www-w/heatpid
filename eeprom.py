# -*- coding: utf-8 -*-

# EEPROM 占用一个扇区512字节，前256字节索引是温度[0,255]值为adc，
# 后256字节[256+0,256+255]索引为ADC值 值为温度

# data 为 0℃~255℃ 对应的adc值 vcc-1k-adc-ntc-gnd
data = '\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFE\xFE\xFE\xFE\xFE\xFE\xFE\xFE\xFE\xFE\xFE\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFC\xFC\xFC\xFC\xFC\xFC\xFB\xFB\xFB\xFB\xFB\xFA\xFA\xFA\xFA\xFA\xF9\xF9\xF9\xF9\xF8\xF8\xF8\xF7\xF7\xF7\xF6\xF6\xF6\xF5\xF5\xF5\xF4\xF4\xF3\xF3\xF2\xF2\xF2\xF1\xF1\xF0\xF0\xEF\xEF\xEE\xED\xED\xEC\xEC\xEB\xEA\xEA\xE9\xE8\xE8\xE7\xE6\xE6\xE5\xE4\xE3\xE3\xE2\xE1\xE0\xDF\xDE\xDD\xDD\xDC\xDB\xDA\xD9\xD8\xD7\xD6\xD5\xD4\xD3\xD2\xD1\xD0\xCE\xCD\xCC\xCB\xCA\xC9\xC7\xC6\xC5\xC4\xC3\xC1\xC0\xBF\xBE\xBC\xBB\xBA\xB8\xB7\xB6\xB4\xB3\xB1\xB0\xAF\xAD\xAC\xAA\xA9\xA8\xA6\xA5\xA3\xA2\xA0\x9F\x9E\x9C\x9B\x99\x98\x96\x95\x93\x92\x91\x8F\x8E\x8C\x8B\x89\x88\x86\x85\x84\x82\x81\x7F\x7E\x7D\x7B\x7A\x78\x77\x76\x74\x73\x72\x70\x6F\x6E\x6C\x6B\x6A\x68\x67\x66\x65\x63\x62\x61\x60\x5F\x5D\x5C\x5B\x5A\x59\x58\x56\x55\x54\x53\x52\x51\x50\x4F\x4E\x4D\x4C\x4B\x4A\x49\x48\x47\x46\x45\x44\x43\x42\x41\x41\x40\x3F\x3E\x3D\x3C\x3C\x3B\x3A\x39\x38\x38\x37\x36\x35\x35\x34\x33\x33\x32\x31\x31\x30\x2F\x2F\x2E\x2D\x2D'

with open('eeprom.bin','wb') as fp:
	fp.write(data)
	# 反推pwm对应温度值
	for pwm in range(0,256):
		for index in range(0,256):
			d = ord(data[index])
			if pwm <= d:
				t = index
		# t值为当前pwd对应的温度值
		fp.write(chr(t))
print('done')
